---
- name: Bring Kernel to defined Version and remove Clutter
  hosts: all
  become: true

  vars:
    # shepherd firmware expects a certain branch!
    default_kernel_branch: lts-4_19
    timezone: Europe/Berlin
    # potentially dangerous / improve security:
    non_essential_packages_a: ['dnsmasq', 'dnsmasq-*', 'nginx', 'nginx-*']
    # old kernel data # TODO: kernel / header that comes with image are somehow not in apt -> dpkgs
    non_essential_packages_b: ['linux-image-4.14.*', 'linux-image-5.4.*', 'linux-image-5.10.*', 'linux-image-5.15.*']
    non_essential_packages_c: ['linux-headers-4.14.*', 'linux-headers-5.4.*', 'linux-headers-5.10.*', 'linux-headers-5.15.*']
    # todo: soon add linux-*-4.19.*
    # not needed drivers / packages Todo: rf-drivers could become important later
    non_essential_packages_d: ['alsa-utils', 'wireless-*', 'wpasupplicant', 'ofono', 'bluez', 'bluetooth', 'rfkill']
    non_essential_packages_e: ['seeed-modules-*', 'rtl8*', 'can-utils', 'libasound*']
    non_essential_packages_f: ['ti-sgx-*', 'eject', 'iw', 'vpdma-*', 'libx11*']
    non_essential_packages_g: ['vim-runtime', 'humanity-icon-theme', 'python3-sympy']
    # todo: vpdma maybe my fault, manual install, there is much more cluttering up the system,
    # - initramfs-* seems to be unused
    # - add: libjpeg*, libx11
    # ubuntu 21.04 seems to have no linux-headers/image-4.15, vpdma-*,

  vars_prompt:
    # these can be also passed as argument:  -e "update_kernel=True" -> automatically skips these prompts
    - name: update_kernel
      prompt: "Do you want to update the Kernel?"
      private: no
      default: "no"

    - name: update_bootloader
      prompt: "Do you want to update the Bootloader?"
      private: no
      default: "no"

    - name: delete_unused_files
      prompt: "Should the script remove unused packets & files like firmware?"
      private: no
      default: "no"

  tasks:

  - name: GIT - Update "boot-scripts" from RoberCNelson
    git:
      repo: https://github.com/RobertCNelson/boot-scripts
      dest: /opt/scripts
      update: yes
      version: master

  - name: SCRIPT - Switch to newest release of Kernel Branch "{{ default_kernel_branch }}"
    shell: /opt/scripts/tools/update_kernel.sh --{{ default_kernel_branch }}
    when: update_kernel|bool

  - name: SYS - Restart device
    shell: sleep 2 && shutdown -r now "Ansible restart"
    async: 1
    poll: 0
    ignore_errors: true
    when: update_kernel|bool
  - name: SYS - Waiting to come back
    wait_for_connection:
      delay: 15
      timeout: 300
    become: no
    when: update_kernel|bool

  - name: SCRIPT - Update Bootloader
    shell: yes | /opt/scripts/tools/developers/update_bootloader.sh
    when: update_bootloader|bool

  - name: delete unused firmware
    command: "rm -rf {{item}}"
    with_items:
      - /usr/lib/firmware/netronome
      - /usr/lib/firmware/qcom
      - /usr/lib/firmware/amd*
      - /usr/lib/firmware/intel
      - /usr/lib/firmware/mellanox
      - /usr/lib/firmware/liquidio
      - /usr/lib/firmware/mrvl
      - /usr/lib/firmware/ath1*
      - /usr/lib/firmware/nvidia
      - /usr/lib/firmware/radeon
      - /usr/lib/firmware/iwlwifi-*
    when: delete_unused_files|bool

  - name: delete initrd.img
    command: "rm -rf {{item}}"
    with_items:
      - /boot/initrd.img-*
    when: delete_unused_files|bool

  - name: delete Logs
    command: "rm -rf {{item}}"
    with_items:
      - /var/log/*
    when: delete_unused_files|bool

  - name: APT - Uninstall non-essential Packages
    apt:
      name: "{{ item }}"
      state: absent
      purge: yes
    ignore_errors: yes
    with_items:
      - "{{ non_essential_packages_a }}"
      - "{{ non_essential_packages_b }}"
      - "{{ non_essential_packages_c }}"
      - "{{ non_essential_packages_d }}"
      - "{{ non_essential_packages_e }}"
      - "{{ non_essential_packages_f }}"
      - "{{ non_essential_packages_g }}"
    when: delete_unused_files|bool

  - name: Uname - Get Kernel-Version
    command: uname --kernel-release
    register: kernelrelease
    changed_when: False

  - name: APT - Install matching Kernel-Headers for running Kernel
    apt:
      name: 'linux-headers-{{ kernelrelease.stdout.strip() }}'
      update_cache: yes

  - name: APT - Upgrade all packages to the latest version
    apt:
      upgrade: dist
      update_cache: yes

  - name: APT - Cleanup Dependencies
    apt:
      autoremove: yes

  - name: APT - Cleanup Cache
    apt:
      autoclean: yes

  - name: APT - clean cache
    command: apt clean  # this one seems reliable (compared to the two above)

  - name: CFG - Set timezone to "{{ timezone }}"
    timezone:
      name: "{{ timezone }}"

  - name: SYS - Restart Device
    shell: sleep 2 && shutdown -r now "Ansible restart"
    async: 1
    poll: 0
    ignore_errors: true
  - name: SYS - Waiting to come back
    wait_for_connection:
      delay: 15
      timeout: 300
    become: no

#  - name: CFG - Set CPU Governor to more relaxed state (powersave)
#    shell: 
